================================================= Низи и Објекти =================================================

1. Обработка на низа
    - Напиши функција reverseArray која го инвертира редоследот на елементите во низа.
    пр. reverseArray([1, 2, 3, 4, 5]); // Очекуван излез: [5, 4, 3, 2, 1]

2. Обработка на Објекти
    - Да се напише функција countProperties која ќе прима објект како аргумент и ќе ги враќа бројот на неговите својства.
    пр. 
    let car = {
        brand: 'Toyota',
        model: 'Corolla',
        year: 2020
    };

    countProperties(car); // Очекуван излез: 3

3. Комбинирање на Низи и Објекти
    - Напиши функција mergeArraysIntoObject која ќе прима два низи со клучеви и вредности и ќе ги комбинира во објект.
    пр. 
        let keys = ['name', 'age', 'gender'];
        let values = ['Alice', 25, 'female'];

        mergeArraysIntoObject(keys, values);
        // Очекуван излез: { name: 'Alice', age: 25, gender: 'female' }

4. Филтрирање на Низи
    - Напиши функција filterByValueLength која ќе филтрира низа од стрингови според должината на нивните вредности.
    пр. 
        let words = ['apple', 'orange', 'banana', 'kiwi', 'strawberry'];

        filterByValueLength(words, 6);
        // Очекуван излез: ['orange', 'banana', 'kiwi']

5. Манипулација на Објекти
    - Напиши функција updateObjectProperty која прима објект, клуч и вредност и ја ажурира вредноста на соодветниот клуч во објектот.
    пр. 
        let person = {
            name: 'John',
            age: 30,
            city: 'New York'
        };

        updateObjectProperty(person, 'age', 35);
        // Очекуван излез: { name: 'John', age: 35, city: 'New York' }

==================================================================================================================

===================================================== Модули =====================================================

1. Модул за пресметување на површина на геометриска фигура
    - Креирај модул geometry.js што ќе содржи функции за пресметување на површината на различни геометриски фигури (круг, правоаголник, троаголник).
    - Функциите треба да ги повикаш и тестираш во index.js фајлот

2. Модул за конверзија на валути
    - Напиши модул currencyConverter.js кој ќе претвора вредности од една валута во друга во согласност со тековниот валутен курс.
    - Функциите треба да ги повикаш и тестираш во index.js фајлот
    
3. Модул за управување со корисници
    - Креирај модул userManagement.js со функции за додавање, бришење и пребарување на корисници.
    - Овде треба да се искористат методите кои ги нудат низите т.е push за додавање, filter за бришење и find за пребарување.
    - Функциите треба да ги повикаш и тестираш во index.js фајлот
    
4. Модул за работа со датуми и времиња
    - Разгледајте дополнително како функционира Date типот во Javascript пред да ја решавате оваа задача
    - Направи модул dateTime.js со функции за манипулација со датуми и времиња, како пресметување на разлики помеѓу датуми, форматирање итн.
    - Функциите треба да ги повикаш и тестираш во index.js фајлот


5. Модул за обработка на текст
    - Креирај модул textProcessor.js што ќе содржи функции за обработка на текст, како пребарување на зборови, замена на делови од текст и слично.
    - Треба претходно да имате некој фајл кој ќе содржи текст и со помош на fs од Node.js да го прочитате тој фајл и соодветно да го изменувате, да пребарувате и слично
    - Функциите треба да ги повикаш и тестираш во index.js фајлот

==================================================================================================================

================================================== HTTP Сервер ===================================================

1. Креирање на сервер во Node.js
    - Напиши сервер во Node.js кој ќе слуша на одредена порта и ќе враќа порака "Добредојдовте на серверот!" кога се пристапува на основната патека /.

2. Читање на HTTP барање
    - Истражете на интернет што прават барањето и одговорот кај клиент-сервер архитектурата (request/response) и кои клучеви ги содржат соодветно
    - req.query, req.params, req.auth, req.body, req.url - неколку од тие битни параметри
    - Имплементирај сервер во Node.js што ќе чита податоци од HTTP барањето (на пример, URL параметри, query параметри или податоци од телото на барањето) и ќе ги прикаже во одговорот.
    - Зависно од типот на барањето дали е GET, POST итн. ќе треба да вратите некој одговор од серверот кон клиентот

3. Статични датотеки и HTTP сервер
    - Истражете како можеме кога за одредена рута да вратиме одговор со res.send(), да вратиме одговор кој во себе ќе има HTML, CSS и JS.
    - Креирај HTTP сервер во Node.js кој ќе сервира статични датотеки како HTML, CSS и JS датотеки, враќајќи ги наодносно пристапувајќи до нив кога се пристапува до соодветните URL патеки.
    
4. Испраќање на POST барања и обработка на податоци
    - Направи сервер во Node.js кој ќе ги прифаќа POST барањата на некоја рута и ќе ги обработува податоците што се праќаат во телото на барањето, па потоа ги дава на клиентот.

5. API покани преку HTTP
    - Имплементирај API со различни патеки и операции (GET, POST, PUT, DELETE) во Node.js и користи HTTP методи за пристап до нив, како и враќање на соодветни одговори за секој метод.
    - Одговорите може да бидат обични стрингови
    пр. GET - Добредојдовте, POST - Го обработуваме вашето барање, PUT - Го ажурираме вашето барање, DELETE - Го бришеме ресурсот

==================================================================================================================